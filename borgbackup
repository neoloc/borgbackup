#!/usr/bin/env zsh

# some helpers and error handling:
info() { printf "\n%s %s\n\n" "$( date )" "$*" >&2; }
trap 'echo $( date ) Backup interrupted >&2; exit 2' INT TERM

info "Starting backup"

# Backup the most important directories into an archive named after
# the machine this script is currently running on:

dconf dump / > .config/dconf/dconf_settings_backup

borg create					\
    --filter AME			\
    --stats					\
    --show-rc				\
    --compression zstd		\
    --progress				\
    --exclude-caches		\
    --exclude '*/.cache/*' \
    --exclude '*/.config/*/Cache/*' \
    --exclude '*/.config/*/*/Cache/*' \
    --exclude '*/Music/*' \
    --exclude '*/Downloads/*' \
    --exclude '*/onedrive/*' \
    --exclude '*.iso' \
    						\
    ::'{hostname}-{now}'	\
    $HOME \

backup_exit=$?

info "Pruning repository"

# Use the `prune` subcommand to maintain 7 daily, 4 weekly and 6 monthly
# archives of THIS machine. The '{hostname}-' prefix is very important to
# limit prune's operation to this machine's archives and not apply to
# other machines' archives also:

borg prune					\
    --list\
    --prefix '{hostname}-'	\
    --show-rc				\
    --keep-within	7d		\
    --keep-daily	31		\
    --keep-weekly	8		\
    --keep-monthly	6		\

prune_exit=$?

# use highest exit code as global exit code
global_exit=$(( backup_exit > prune_exit ? backup_exit : prune_exit ))

if [ ${global_exit} -eq 0 ]; then
    info "Backup and Prune finished successfully"
elif [ ${global_exit} -eq 1 ]; then
    info "Backup and/or Prune finished with warnings"
else
    info "Backup and/or Prune finished with errors"
fi

exit ${global_exit}
